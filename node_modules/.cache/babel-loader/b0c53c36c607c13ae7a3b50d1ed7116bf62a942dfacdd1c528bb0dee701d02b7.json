{"ast":null,"code":"var _jsxFileName = \"/Users/quiceno95/Documents/GitHub/landing_ReservaT/src/context/AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useCallback, useRef } from 'react';\nimport Cookies from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\n\n// Función para cargar el carrito desde localStorage\nconst loadCartFromStorage = () => {\n  try {\n    // Verificar si localStorage está disponible\n    if (typeof window === 'undefined' || typeof localStorage === 'undefined') {\n      return [];\n    }\n    const savedCart = localStorage.getItem('reservat_cart');\n    return savedCart ? JSON.parse(savedCart) : [];\n  } catch (error) {\n    console.error('Error loading cart from localStorage:', error);\n    return [];\n  }\n};\n\n// Función para guardar el carrito en localStorage\nconst saveCartToStorage = cart => {\n  try {\n    // Verificar si localStorage está disponible\n    if (typeof window === 'undefined' || typeof localStorage === 'undefined') {\n      return;\n    }\n    localStorage.setItem('reservat_cart', JSON.stringify(cart));\n  } catch (error) {\n    console.error('Error saving cart to localStorage:', error);\n  }\n};\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  cart: [],\n  // Inicializar como array vacío temporalmente\n  services: [],\n  servicePhotos: {},\n  // Almacenar fotos por servicio ID\n  loading: false,\n  error: null,\n  currentCategory: 'all',\n  searchFilters: {\n    ciudad: '',\n    relevancia: '',\n    tipo_servicio: '',\n    query: ''\n  }\n};\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: !!action.payload,\n        loading: false\n      };\n    case 'LOGOUT':\n      Cookies.remove('access_token');\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false\n      };\n    case 'SET_SERVICES':\n      return {\n        ...state,\n        services: action.payload,\n        loading: false\n      };\n    case 'SET_SERVICE_PHOTOS':\n      return {\n        ...state,\n        servicePhotos: {\n          ...state.servicePhotos,\n          [action.payload.serviceId]: action.payload.photos\n        }\n      };\n    case 'ADD_TO_CART':\n      const existingItem = state.cart.find(item => item.id_servicio === action.payload.id_servicio);\n      let newCart;\n      if (existingItem) {\n        newCart = state.cart.map(item => item.id_servicio === action.payload.id_servicio ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        newCart = [...state.cart, {\n          ...action.payload,\n          quantity: 1\n        }];\n      }\n      // Guardar en localStorage\n      saveCartToStorage(newCart);\n      return {\n        ...state,\n        cart: newCart\n      };\n    case 'REMOVE_FROM_CART':\n      const filteredCart = state.cart.filter(item => item.id_servicio !== action.payload);\n      // Guardar en localStorage\n      saveCartToStorage(filteredCart);\n      return {\n        ...state,\n        cart: filteredCart\n      };\n    case 'UPDATE_CART_QUANTITY':\n      const updatedCart = state.cart.map(item => item.id_servicio === action.payload.id ? {\n        ...item,\n        quantity: Math.max(0, action.payload.quantity)\n      } : item).filter(item => item.quantity > 0);\n      // Guardar en localStorage\n      saveCartToStorage(updatedCart);\n      return {\n        ...state,\n        cart: updatedCart\n      };\n    case 'CLEAR_CART':\n      // Limpiar localStorage\n      saveCartToStorage([]);\n      return {\n        ...state,\n        cart: []\n      };\n    case 'SET_CATEGORY':\n      return {\n        ...state,\n        currentCategory: action.payload\n      };\n    case 'SET_SEARCH_FILTERS':\n      return {\n        ...state,\n        searchFilters: {\n          ...state.searchFilters,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n}\nexport function AppProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Check for existing token on app load\n  useEffect(() => {\n    const token = Cookies.get('access_token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        if (decoded.exp * 1000 > Date.now()) {\n          fetchUserData(decoded.id);\n        } else {\n          Cookies.remove('access_token');\n        }\n      } catch (error) {\n        console.error('Invalid token:', error);\n        Cookies.remove('access_token');\n      }\n    }\n  }, []);\n  const fetchUserData = async userId => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await fetch(`https://back-services.api-reservat.com/api/v1/mayorista/consultar/${userId}`);\n      if (response.ok) {\n        const userData = await response.json();\n        dispatch({\n          type: 'SET_USER',\n          payload: userData\n        });\n      } else {\n        throw new Error('Failed to fetch user data');\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Error al cargar datos del usuario'\n      });\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      dispatch({\n        type: 'SET_ERROR',\n        payload: null\n      });\n      const response = await fetch('https://back-services.api-reservat.com/api/v1/usuarios/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          contraseña: password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const decoded = jwtDecode(data.access_token);\n\n        // Set cookie with expiration\n        Cookies.set('access_token', data.access_token, {\n          expires: new Date(decoded.exp * 1000),\n          secure: true,\n          sameSite: 'strict'\n        });\n        await fetchUserData(decoded.id);\n        return {\n          success: true\n        };\n      } else {\n        let errorMessage = 'Error de autenticación';\n        switch (response.status) {\n          case 404:\n            errorMessage = 'El usuario no existe';\n            break;\n          case 401:\n            errorMessage = 'Credenciales incorrectas';\n            break;\n          case 403:\n            errorMessage = 'El usuario no está activo, comunícate con el administrador';\n            break;\n          case 500:\n            errorMessage = 'Error interno del servidor';\n            break;\n          default:\n            errorMessage = data.detail || 'Error de autenticación';\n        }\n        dispatch({\n          type: 'SET_ERROR',\n          payload: errorMessage\n        });\n        return {\n          success: false,\n          error: errorMessage\n        };\n      }\n    } catch (error) {\n      const errorMessage = 'Error de conexión';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const fetchServices = useCallback(async () => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await fetch('https://back-services.api-reservat.com/api/v1/servicios/listar/');\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({\n          type: 'SET_SERVICES',\n          payload: data.servicios || []\n        });\n      } else {\n        throw new Error('Failed to fetch services');\n      }\n    } catch (error) {\n      console.error('Error fetching services:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Error al cargar servicios'\n      });\n    }\n  }, [dispatch]);\n\n  // Control robusto de peticiones de fotos para evitar bucles infinitos\n  const photosRequestsInProgress = useRef(new Set());\n  const photosCache = useRef(new Map());\n  const fetchServicePhotos = useCallback(async serviceId => {\n    try {\n      // Si ya tenemos las fotos en caché, devolverlas inmediatamente\n      if (photosCache.current.has(serviceId)) {\n        return photosCache.current.get(serviceId);\n      }\n\n      // Si ya hay una petición en progreso para este servicio, no hacer otra\n      if (photosRequestsInProgress.current.has(serviceId)) {\n        return [];\n      }\n\n      // Marcar que estamos haciendo una petición para este servicio\n      photosRequestsInProgress.current.add(serviceId);\n      const response = await fetch(`https://back-services.api-reservat.com/api/v1/fotos/servicios/${serviceId}`);\n      if (response.ok) {\n        const data = await response.json();\n        // Extraer solo las URLs de las fotos como solicitaste\n        const photoUrls = data.fotos.map(foto => foto.url);\n\n        // Guardar en caché local para evitar peticiones duplicadas\n        photosCache.current.set(serviceId, photoUrls);\n\n        // También guardar en el estado global para sincronización\n        dispatch({\n          type: 'SET_SERVICE_PHOTOS',\n          payload: {\n            serviceId,\n            photos: photoUrls\n          }\n        });\n        return photoUrls;\n      } else {\n        console.warn(`No se pudieron cargar las fotos para el servicio ${serviceId}`);\n        return [];\n      }\n    } catch (error) {\n      console.error(`Error fetching photos for service ${serviceId}:`, error);\n      return [];\n    } finally {\n      // Remover de las peticiones en progreso\n      photosRequestsInProgress.current.delete(serviceId);\n    }\n  }, [dispatch]);\n  const getCartTotal = () => {\n    return state.cart.reduce((total, item) => total + item.precio * item.quantity, 0);\n  };\n  const getCartItemsCount = () => {\n    return state.cart.reduce((total, item) => total + item.quantity, 0);\n  };\n  const getFilteredServices = () => {\n    let filtered = state.services;\n\n    // Filter by category\n    if (state.currentCategory !== 'all') {\n      const categoryMap = {\n        'transportes': 'transporte',\n        'hoteles': 'alojamiento',\n        'restaurantes': 'restaurante',\n        'experiencias': 'experiencias'\n      };\n      filtered = filtered.filter(service => service.tipo_servicio === categoryMap[state.currentCategory]);\n    }\n\n    // Apply search filters\n    if (state.searchFilters.query) {\n      filtered = filtered.filter(service => service.nombre.toLowerCase().includes(state.searchFilters.query.toLowerCase()) || service.descripcion.toLowerCase().includes(state.searchFilters.query.toLowerCase()));\n    }\n    if (state.searchFilters.ciudad) {\n      filtered = filtered.filter(service => service.ciudad.toLowerCase().includes(state.searchFilters.ciudad.toLowerCase()));\n    }\n    if (state.searchFilters.tipo_servicio) {\n      filtered = filtered.filter(service => service.tipo_servicio === state.searchFilters.tipo_servicio);\n    }\n    return filtered;\n  };\n  const value = {\n    ...state,\n    dispatch,\n    login,\n    fetchServices,\n    fetchServicePhotos,\n    getCartTotal,\n    getCartItemsCount,\n    getFilteredServices,\n    logout: () => dispatch({\n      type: 'LOGOUT'\n    }),\n    addToCart: service => dispatch({\n      type: 'ADD_TO_CART',\n      payload: service\n    }),\n    removeFromCart: serviceId => dispatch({\n      type: 'REMOVE_FROM_CART',\n      payload: serviceId\n    }),\n    updateCartQuantity: (id, quantity) => dispatch({\n      type: 'UPDATE_CART_QUANTITY',\n      payload: {\n        id,\n        quantity\n      }\n    }),\n    clearCart: () => dispatch({\n      type: 'CLEAR_CART'\n    }),\n    setCategory: category => dispatch({\n      type: 'SET_CATEGORY',\n      payload: category\n    }),\n    setSearchFilters: filters => dispatch({\n      type: 'SET_SEARCH_FILTERS',\n      payload: filters\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n}\n_s(AppProvider, \"0nV48v1+dJ1iJ0t98mK6HgKywaU=\");\n_c = AppProvider;\nexport function useApp() {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useCallback","useRef","Cookies","jwtDecode","jsxDEV","_jsxDEV","AppContext","loadCartFromStorage","window","localStorage","savedCart","getItem","JSON","parse","error","console","saveCartToStorage","cart","setItem","stringify","initialState","user","isAuthenticated","services","servicePhotos","loading","currentCategory","searchFilters","ciudad","relevancia","tipo_servicio","query","appReducer","state","action","type","payload","remove","serviceId","photos","existingItem","find","item","id_servicio","newCart","map","quantity","filteredCart","filter","updatedCart","id","Math","max","AppProvider","children","_s","dispatch","token","get","decoded","exp","Date","now","fetchUserData","userId","response","fetch","ok","userData","json","Error","login","email","password","method","headers","body","contraseña","data","access_token","set","expires","secure","sameSite","success","errorMessage","status","detail","fetchServices","servicios","photosRequestsInProgress","Set","photosCache","Map","fetchServicePhotos","current","has","add","photoUrls","fotos","foto","url","warn","delete","getCartTotal","reduce","total","precio","getCartItemsCount","getFilteredServices","filtered","categoryMap","service","nombre","toLowerCase","includes","descripcion","value","logout","addToCart","removeFromCart","updateCartQuantity","clearCart","setCategory","category","setSearchFilters","filters","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","$RefreshReg$"],"sources":["/Users/quiceno95/Documents/GitHub/landing_ReservaT/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useCallback, useRef } from 'react';\nimport Cookies from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\n\nconst AppContext = createContext();\n\n// Función para cargar el carrito desde localStorage\nconst loadCartFromStorage = () => {\n  try {\n    // Verificar si localStorage está disponible\n    if (typeof window === 'undefined' || typeof localStorage === 'undefined') {\n      return [];\n    }\n    const savedCart = localStorage.getItem('reservat_cart');\n    return savedCart ? JSON.parse(savedCart) : [];\n  } catch (error) {\n    console.error('Error loading cart from localStorage:', error);\n    return [];\n  }\n};\n\n// Función para guardar el carrito en localStorage\nconst saveCartToStorage = (cart) => {\n  try {\n    // Verificar si localStorage está disponible\n    if (typeof window === 'undefined' || typeof localStorage === 'undefined') {\n      return;\n    }\n    localStorage.setItem('reservat_cart', JSON.stringify(cart));\n  } catch (error) {\n    console.error('Error saving cart to localStorage:', error);\n  }\n};\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  cart: [], // Inicializar como array vacío temporalmente\n  services: [],\n  servicePhotos: {}, // Almacenar fotos por servicio ID\n  loading: false,\n  error: null,\n  currentCategory: 'all',\n  searchFilters: {\n    ciudad: '',\n    relevancia: '',\n    tipo_servicio: '',\n    query: ''\n  }\n};\n\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload, loading: false };\n    \n    case 'SET_USER':\n      return { \n        ...state, \n        user: action.payload, \n        isAuthenticated: !!action.payload,\n        loading: false \n      };\n    \n    case 'LOGOUT':\n      Cookies.remove('access_token');\n      return { \n        ...state, \n        user: null, \n        isAuthenticated: false \n      };\n    \n    case 'SET_SERVICES':\n      return { ...state, services: action.payload, loading: false };\n    \n    case 'SET_SERVICE_PHOTOS':\n      return { \n        ...state, \n        servicePhotos: { \n          ...state.servicePhotos, \n          [action.payload.serviceId]: action.payload.photos \n        } \n      };\n    \n    case 'ADD_TO_CART':\n      const existingItem = state.cart.find(item => item.id_servicio === action.payload.id_servicio);\n      let newCart;\n      if (existingItem) {\n        newCart = state.cart.map(item =>\n          item.id_servicio === action.payload.id_servicio\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n      } else {\n        newCart = [...state.cart, { ...action.payload, quantity: 1 }];\n      }\n      // Guardar en localStorage\n      saveCartToStorage(newCart);\n      return {\n        ...state,\n        cart: newCart\n      };\n    \n    case 'REMOVE_FROM_CART':\n      const filteredCart = state.cart.filter(item => item.id_servicio !== action.payload);\n      // Guardar en localStorage\n      saveCartToStorage(filteredCart);\n      return {\n        ...state,\n        cart: filteredCart\n      };\n    \n    case 'UPDATE_CART_QUANTITY':\n      const updatedCart = state.cart.map(item =>\n        item.id_servicio === action.payload.id\n          ? { ...item, quantity: Math.max(0, action.payload.quantity) }\n          : item\n      ).filter(item => item.quantity > 0);\n      // Guardar en localStorage\n      saveCartToStorage(updatedCart);\n      return {\n        ...state,\n        cart: updatedCart\n      };\n    \n    case 'CLEAR_CART':\n      // Limpiar localStorage\n      saveCartToStorage([]);\n      return { ...state, cart: [] };\n    \n    case 'SET_CATEGORY':\n      return { ...state, currentCategory: action.payload };\n    \n    case 'SET_SEARCH_FILTERS':\n      return { \n        ...state, \n        searchFilters: { ...state.searchFilters, ...action.payload } \n      };\n    \n    default:\n      return state;\n  }\n}\n\nexport function AppProvider({ children }) {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Check for existing token on app load\n  useEffect(() => {\n    const token = Cookies.get('access_token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        if (decoded.exp * 1000 > Date.now()) {\n          fetchUserData(decoded.id);\n        } else {\n          Cookies.remove('access_token');\n        }\n      } catch (error) {\n        console.error('Invalid token:', error);\n        Cookies.remove('access_token');\n      }\n    }\n  }, []);\n\n  const fetchUserData = async (userId) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const response = await fetch(`https://back-services.api-reservat.com/api/v1/mayorista/consultar/${userId}`);\n      \n      if (response.ok) {\n        const userData = await response.json();\n        dispatch({ type: 'SET_USER', payload: userData });\n      } else {\n        throw new Error('Failed to fetch user data');\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Error al cargar datos del usuario' });\n      dispatch({ type: 'LOGOUT' });\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      dispatch({ type: 'SET_ERROR', payload: null });\n\n      const response = await fetch('https://back-services.api-reservat.com/api/v1/usuarios/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          contraseña: password\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        const decoded = jwtDecode(data.access_token);\n        \n        // Set cookie with expiration\n        Cookies.set('access_token', data.access_token, {\n          expires: new Date(decoded.exp * 1000),\n          secure: true,\n          sameSite: 'strict'\n        });\n\n        await fetchUserData(decoded.id);\n        return { success: true };\n      } else {\n        let errorMessage = 'Error de autenticación';\n        switch (response.status) {\n          case 404:\n            errorMessage = 'El usuario no existe';\n            break;\n          case 401:\n            errorMessage = 'Credenciales incorrectas';\n            break;\n          case 403:\n            errorMessage = 'El usuario no está activo, comunícate con el administrador';\n            break;\n          case 500:\n            errorMessage = 'Error interno del servidor';\n            break;\n          default:\n            errorMessage = data.detail || 'Error de autenticación';\n        }\n        dispatch({ type: 'SET_ERROR', payload: errorMessage });\n        return { success: false, error: errorMessage };\n      }\n    } catch (error) {\n      const errorMessage = 'Error de conexión';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const fetchServices = useCallback(async () => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const response = await fetch('https://back-services.api-reservat.com/api/v1/servicios/listar/');\n      \n      if (response.ok) {\n        const data = await response.json();\n        dispatch({ type: 'SET_SERVICES', payload: data.servicios || [] });\n      } else {\n        throw new Error('Failed to fetch services');\n      }\n    } catch (error) {\n      console.error('Error fetching services:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Error al cargar servicios' });\n    }\n  }, [dispatch]);\n\n  // Control robusto de peticiones de fotos para evitar bucles infinitos\n  const photosRequestsInProgress = useRef(new Set());\n  const photosCache = useRef(new Map());\n\n  const fetchServicePhotos = useCallback(async (serviceId) => {\n    try {\n      // Si ya tenemos las fotos en caché, devolverlas inmediatamente\n      if (photosCache.current.has(serviceId)) {\n        return photosCache.current.get(serviceId);\n      }\n\n      // Si ya hay una petición en progreso para este servicio, no hacer otra\n      if (photosRequestsInProgress.current.has(serviceId)) {\n        return [];\n      }\n\n      // Marcar que estamos haciendo una petición para este servicio\n      photosRequestsInProgress.current.add(serviceId);\n\n      const response = await fetch(`https://back-services.api-reservat.com/api/v1/fotos/servicios/${serviceId}`);\n      \n      if (response.ok) {\n        const data = await response.json();\n        // Extraer solo las URLs de las fotos como solicitaste\n        const photoUrls = data.fotos.map(foto => foto.url);\n        \n        // Guardar en caché local para evitar peticiones duplicadas\n        photosCache.current.set(serviceId, photoUrls);\n        \n        // También guardar en el estado global para sincronización\n        dispatch({ \n          type: 'SET_SERVICE_PHOTOS', \n          payload: { serviceId, photos: photoUrls } \n        });\n        \n        return photoUrls;\n      } else {\n        console.warn(`No se pudieron cargar las fotos para el servicio ${serviceId}`);\n        return [];\n      }\n    } catch (error) {\n      console.error(`Error fetching photos for service ${serviceId}:`, error);\n      return [];\n    } finally {\n      // Remover de las peticiones en progreso\n      photosRequestsInProgress.current.delete(serviceId);\n    }\n  }, [dispatch]);\n\n  const getCartTotal = () => {\n    return state.cart.reduce((total, item) => total + (item.precio * item.quantity), 0);\n  };\n\n  const getCartItemsCount = () => {\n    return state.cart.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const getFilteredServices = () => {\n    let filtered = state.services;\n\n    // Filter by category\n    if (state.currentCategory !== 'all') {\n      const categoryMap = {\n        'transportes': 'transporte',\n        'hoteles': 'alojamiento',\n        'restaurantes': 'restaurante',\n        'experiencias': 'experiencias'\n      };\n      filtered = filtered.filter(service => \n        service.tipo_servicio === categoryMap[state.currentCategory]\n      );\n    }\n\n    // Apply search filters\n    if (state.searchFilters.query) {\n      filtered = filtered.filter(service =>\n        service.nombre.toLowerCase().includes(state.searchFilters.query.toLowerCase()) ||\n        service.descripcion.toLowerCase().includes(state.searchFilters.query.toLowerCase())\n      );\n    }\n\n    if (state.searchFilters.ciudad) {\n      filtered = filtered.filter(service =>\n        service.ciudad.toLowerCase().includes(state.searchFilters.ciudad.toLowerCase())\n      );\n    }\n\n    if (state.searchFilters.tipo_servicio) {\n      filtered = filtered.filter(service =>\n        service.tipo_servicio === state.searchFilters.tipo_servicio\n      );\n    }\n\n    return filtered;\n  };\n\n  const value = {\n    ...state,\n    dispatch,\n    login,\n    fetchServices,\n    fetchServicePhotos,\n    getCartTotal,\n    getCartItemsCount,\n    getFilteredServices,\n    logout: () => dispatch({ type: 'LOGOUT' }),\n    addToCart: (service) => dispatch({ type: 'ADD_TO_CART', payload: service }),\n    removeFromCart: (serviceId) => dispatch({ type: 'REMOVE_FROM_CART', payload: serviceId }),\n    updateCartQuantity: (id, quantity) => dispatch({ type: 'UPDATE_CART_QUANTITY', payload: { id, quantity } }),\n    clearCart: () => dispatch({ type: 'CLEAR_CART' }),\n    setCategory: (category) => dispatch({ type: 'SET_CATEGORY', payload: category }),\n    setSearchFilters: (filters) => dispatch({ type: 'SET_SEARCH_FILTERS', payload: filters }),\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nexport function useApp() {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}